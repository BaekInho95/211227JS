객체

정보의 양(함수와 변수)이 많아졌을 때 서로 연관된 정보를 정리하기 위해 사용하는 도구 - 배열
-> 순서에 따라서 정보를 정리정돈한다.

객체 -> 순서 없이 저장할 수 있다.
	-> 배열, 문자, 숫자, 함수를 담을 수 있다.

함수 -> 코드가 많아지면 정리정돈하는 도구

그렇다면 객체가 많아지면? -> 파일로 쪼개기

@#$.js 파일에 <script> 내용을 넣어서 스크립트 내용을 따로 관리한다.

라이브러리 & 프레임워크

-> 다른 사람의 도움을 받아서 소프트웨어를 만든다는 공통점

라이브러리 : 재사용하기 좋은 소프트웨어 -> 내가 만들 프로그램에 사용할 부품을 가져오는

프레임워크 : 반 제품과 같은 느낌

자바스크립트 라이브러리 : 
	jQuery -> 태그 : $

UI : User Interface

API : Application Programming Interface  

자신만의 프로젝트 짜기
-> 최소한의 도구만 사용해보기 
-> 도저히 해결이 안되면 반복문, 조건문, 함수, 객체를 도입
-> 여기서도 해결이 안되면 다시 공부

자세히 살펴볼 것들
document 객체 -> 웹페이지에 있는 어떤 태그를 삭제하고 싶거나 자식 태그를 추가하고 싶다면
DOM 객체 (Document Object Model) -> Document에서 찾을 수 없다면 
windows 객체 -> 웹 브라우저 자체를 제어해야 할 때
ajax -> 웹페이지를 리로드하지 않고 정보를 변경하고 싶다면
cookie -> 웹페이지가 리로드되어도 현재 상태를 유지하고 싶다면
offline web application -> 인터넷이 끊켜도 동작하는 웹 페이지를 만들고 싶다면
webRTC 화상통신 웹
speech API 음성 다루기
webGML 3차원 그래픽 게임
webVR 가상현실


Ajax
